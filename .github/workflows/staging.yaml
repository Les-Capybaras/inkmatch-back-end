name: Staging CI/CD Pipeline

on:
  push:
    branches:
      - staging

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build and start services
        run: docker compose -f docker-compose.prod.yml up -d --build

  QA:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Run audit
        run: npm audit
        continue-on-error: true

      - name: Run lint
        run: npm run lint:ci

      - name: Run type check
        run: npm run typecheck

  Tests:
    runs-on: ubuntu-latest
    needs: Build

    services:
      database:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: inkmatch
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Build and start services
        run: npm ci

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Run unit tests
        run: npm run test:unit

      - name: Run functional tests
        run: npm run test:functional

      - name: Run code coverage
        run: npm run test:coverage

  Deploy:
    runs-on: ubuntu-latest
    needs: [Build, Tests, QA]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          script: ansible-playbook playbook.yml
